name: Release

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: rundeck-exporter

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      TAG: "${{ github.ref_name }}"

    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true

      - id: bump-version
        name: Bump version
        run: |
          # Strip "v" prefix from tag name
          VERSION=${TAG##v}
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          uv version $VERSION

      - name: Commit updated pyproject.toml
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: pyproject.toml
          commit_message: "Bump version to $VERSION [skip ci]"
          tagging_message: "$TAG"
          push_options: '--force'

    outputs:
      version: ${{ steps.bump-version.outputs.version }}

  build-and-publish:
    runs-on: ubuntu-latest
    needs: bump-version

    env:
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_TAG: ${{ github.ref_name }}
      IMAGE_VERSION: ${{ needs.bump-version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker image
        run: make docker-build

      - name: Publish Docker image
        run: |
          # Push docker image:latest if no alfa or beta is set in the version tag.
          if [[ ! "$IMAGE_VERSION" =~ (alfa|beta) ]]; then
            IMAGE_VERSION=latest make push-all
          fi
          make push-all

      - name: Publish to pypi.org
        run: |
          pip install --quiet twine
          docker run -dt --name $IMAGE_NAME --rm --entrypoint /bin/ash ${IMAGE_NAME}:latest
          docker cp ${IMAGE_NAME}:/tmp/dist ./
          docker stop -t 0 $IMAGE_NAME
          twine upload --skip-existing dist/*
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
      - name: Create Github release
        run: |
          gh release create "$GITHUB_TAG" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$GITHUB_TAG" \
              --generate-notes
